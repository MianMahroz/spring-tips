version: "2.4"
services:
  app:
    build: .
    environment:
#      SPRING_REDIS_HOST: "redis"
#      SPRING_REDIS_PORT: "6379"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/workshop"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "example"
    ports:
      - "8080:8080"

  db:
    image: "postgres:14-alpine"
    ports: [5432:5432]
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: workshop
    volumes:
      - "./src/test/resources/talks-schema.sql:/docker-entrypoint-initdb.d/schema.sql"

#  redis:
#    image: "redis:6-alpine"


  broker:
    image: "confluentinc/cp-kafka:5.4.6"
    container_name: broker
    ports: [9092:9092]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  kafdrop:
    image: 'obsidiandynamics/kafdrop:latest'
    restart: "no"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: broker:29092
      JVM_OPTS: -Xms32M -Xmx64M
      SERVER_SERVLET_CONTEXTPATH: /
    container_name: kafdrop
    depends_on:
      - "broker"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
